// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Config {
  PUBLIC
  PRIVATE
}

enum AccountKind {
  USER
  GHOST
}

model Member {
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId BigInt
  account String
  donorIn Record[]
  recipientIn RecordOfRecipient[]
  active Boolean @default(true)
  
  @@id([chatId, account])
  @@unique([chatId, account])
}

model RecordOfRecipient {
  member Member @relation(fields: [memberChatId, account], references: [chatId, account], onDelete: Cascade)
  memberChatId BigInt // relation scalar field (used in the `@relation` attribute above)
  account String
  record Record @relation(fields: [recordId, chatId], references: [chatId, id], onDelete: Cascade)
  recordId BigInt
  chatId BigInt
  // relation scalar field (used in the `@relation` attribute above)
  
  @@id([chatId, account, recordId])
}

model Record {
  id BigInt @default(autoincrement())
  messageId BigInt
  replyId BigInt?
  chat Chat @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId BigInt
  donor Member? @relation(fields: [donorChatId, donorAccount], references: [chatId, account], onDelete: SetNull)
  donorChatId BigInt?
  donorAccount String?
  hasDonor Boolean
  recipients RecordOfRecipient[]
  recipientsQuantity Int
  amount Int @default(0)
  active Boolean @default(true)
  
  @@id([chatId, id])
  @@unique([chatId, id])
  @@unique([chatId, messageId])
}

model Chat {
  id BigInt @id @unique
  members Member[]
  records Record[]
  config Config
}
//prisma migrate dev --name init